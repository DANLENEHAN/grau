# Alembic
# Run all revisions
alembic upgrade head
# Auto-generate revisions based on relation model file after target_metadata
alembic revision --autogenerate -m "User table"

# Working with flask
# Run flask app
# You need to tell the Flask where your application is with the --app option
# You can also set the FLASK_APP environment variable to the name of your application
# Or you can name your file app.py and Flask will automatically find it
flask run --host=0.0.0.0 --debug

# Postgres https://postgresapp.com/
# Terminal based front-end for Postgres
psql -h localhost -d train -U dan
# list tables
\dt
# select db
\c train
# describe table
\d
# Alter table
ALTER TABLE user MODIFY email varchar(100);

# Git
git rm -r --cached scar/__pycache__ 

# format files
black .

# In order to run the tests we must install our app package in editable mode
cd grau
pip install -e .
# Run tests
pytest
